{
  "Resources": {
    "OutBoundResponsePortsNetworkAclEntry": {
      "Properties": {
        "PortRange": {
          "From": "1024",
          "To": "65535"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow",
        "Egress": "true",
        "RuleNumber": "102",
        "Protocol": "6",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      },
      "Type": "AWS::EC2::NetworkAclEntry"
    },
    "Subnet": {
      "Properties": {
        "CidrBlock": "",
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::Subnet"
    },
    "InboundResponsePortsNetworkAclEntry": {
      "Properties": {
        "PortRange": {
          "From": "1024",
          "To": "65535"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow",
        "Egress": "false",
        "RuleNumber": "102",
        "Protocol": "6",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      },
      "Type": "AWS::EC2::NetworkAclEntry"
    },
    "SubnetNetworkAclAssociation": {
      "Properties": {
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        },
        "SubnetId": {
          "Ref": "Subnet"
        }
      },
      "Type": "AWS::EC2::SubnetNetworkAclAssociation"
    },
    "InternetGateway": {
      "Properties": {},
      "Type": "AWS::EC2::InternetGateway"
    },
    "RouteTable": {
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "DependsOn": "AttachGateway",
      "Type": "AWS::EC2::RouteTable"
    },
    "AttachGateway": {
      "Properties": {
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        },
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::VPCGatewayAttachment"
    },
    "SubnetRouteTableAssociation": {
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "SubnetId": {
          "Ref": "Subnet"
        }
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation"
    },
    "InboundSSHNetworkAclEntry": {
      "Properties": {
        "PortRange": {
          "From": "22",
          "To": "22"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow",
        "Egress": "false",
        "RuleNumber": "101",
        "Protocol": "6",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      },
      "Type": "AWS::EC2::NetworkAclEntry"
    },
    "OutBoundHTTPSNetworkAclEntry": {
      "Properties": {
        "PortRange": {
          "From": "443",
          "To": "443"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow",
        "Egress": "true",
        "RuleNumber": "101",
        "Protocol": "6",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      },
      "Type": "AWS::EC2::NetworkAclEntry"
    },
    "OutBoundHTTPNetworkAclEntry": {
      "Properties": {
        "PortRange": {
          "From": "80",
          "To": "80"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow",
        "Egress": "true",
        "RuleNumber": "100",
        "Protocol": "6",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      },
      "Type": "AWS::EC2::NetworkAclEntry"
    },
    "InboundHTTPNetworkAclEntry": {
      "Properties": {
        "PortRange": {
          "From": "80",
          "To": "80"
        },
        "CidrBlock": "0.0.0.0/0",
        "RuleAction": "allow",
        "Egress": "false",
        "RuleNumber": "100",
        "Protocol": "6",
        "NetworkAclId": {
          "Ref": "NetworkAcl"
        }
      },
      "Type": "AWS::EC2::NetworkAclEntry"
    },
    "NetworkAcl": {
      "Properties": {
        "Tags": [
          {
            "Value": {
              "Ref": "AWS::StackId"
            },
            "Key": "Application"
          }
        ],
        "VpcId": {
          "Ref": "VPC"
        }
      },
      "Type": "AWS::EC2::NetworkAcl"
    },
    "Route": {
      "Properties": {
        "RouteTableId": {
          "Ref": "RouteTable"
        },
        "GatewayId": {
          "Ref": "InternetGateway"
        },
        "DestinationCidrBlock": "0.0.0.0/0"
      },
      "Type": "AWS::EC2::Route"
    },
    "VPC": {
      "Properties": {
        "CidrBlock": ""
      },
      "Type": "AWS::EC2::VPC"
    }
  },
  "Description": "Creates a VPC ready for instances",
  "Outputs": {},
  "AWSTemplateFormatVersion": "2010-09-09",
  "Parameters": {}
}